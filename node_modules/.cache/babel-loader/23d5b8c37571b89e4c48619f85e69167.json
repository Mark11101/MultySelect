{"ast":null,"code":"var _jsxFileName = \"/home/roman/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/MultySelect-master/src/MultySelect.js\";\nimport React from 'react';\nimport './MultySelect.css';\n\nclass ListItem extends React.Component {\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: this.props.suggestionSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, this.props.text));\n  }\n\n}\n\nclass SelectedElements extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      className: \"elementBtn\",\n      onClick: this.props.deleteElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, this.props.item, React.createElement(\"span\", {\n      className: \"cross\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, \"\\u2718\"));\n  }\n\n}\n\nexport default class MultySelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.deleteElement = i => {\n      let suggestions = this.state.suggestions;\n      const selectedElements = this.state.selectedElements;\n      const listOfItems = this.state.listOfItems;\n\n      if (listOfItems.includes(selectedElements[i]) === false) {\n        // 2 пункт доп. задания\n        listOfItems.push(selectedElements[i]);\n      }\n\n      suggestions.push(selectedElements[i]);\n      selectedElements.splice(i, 1);\n      const value = document.getElementById(\"input\").value;\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = suggestions.sort().filter(v => regex.test(v));\n      } else {\n        suggestions = [];\n      }\n\n      this.setState({\n        selectedElements: selectedElements,\n        suggestions: suggestions,\n        listOfItems: listOfItems\n      });\n    };\n\n    this.eachElement = (item, i) => {\n      return React.createElement(SelectedElements, {\n        key: i,\n        item: item,\n        deleteElement: () => this.deleteElement(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      });\n    };\n\n    this.suggestionSelected = (text, index) => {\n      const selectedElements = this.state.selectedElements;\n      selectedElements.push(text);\n      this.setState({\n        selectedElements: selectedElements,\n        suggestions: this.state.suggestions.filter((item, i) => i !== index)\n      });\n    };\n\n    this.handleKeyDown = e => {\n      // доп. задание\n      const selectedElements = this.state.selectedElements;\n      const text = this.state.text;\n      const suggs = this.state.suggestions; // 4 пункт доп. задания (при вводе Апельсин, мандарин, киви)\n\n      if (text.includes(\",\") && !text.includes(\"\\\"\") && e.key === \"Enter\") {\n        let splitText = text.split(\", \");\n\n        for (let i = 0; i < splitText.length; i++) {\n          if (!selectedElements.includes(splitText[i])) {\n            selectedElements.push(splitText[i]);\n          }\n        }\n\n        this.setState({\n          selectedElements: selectedElements\n        });\n      } // 4 пункт доп. задания (при вводе Университет, \"Школа, Детский сад\", Колледж)\n      else if (text.includes(\"\\\"\") && e.key === \"Enter\") {\n          let splitText = text.match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/gm);\n\n          for (let i = 0; i < splitText.length; i++) {\n            if (!selectedElements.includes(splitText[i])) {\n              selectedElements.push(splitText[i]);\n            }\n          }\n\n          this.setState({\n            selectedElements: selectedElements\n          });\n        } // 1 пункт доп. задания\n        else if (suggs.length === 0 && text.length !== 0 && e.key === \"Enter\" && !selectedElements.includes(text)) {\n            selectedElements.push(text);\n            this.setState({\n              selectedElements: selectedElements\n            });\n          } // 3 пункт доп. задания\n          else if (text.length === 0 && e.key === \"Backspace\") {\n              selectedElements.splice(selectedElements.length - 1, 1);\n              this.setState({\n                selectedElements: selectedElements\n              });\n            }\n    };\n\n    this.onTextChanged = e => {\n      const listOfItems = this.props.listOfItems;\n      const value = e.target.value;\n      const selectedElements = this.state.selectedElements;\n      let suggestions = [];\n      suggestions = listOfItems;\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), \"i\");\n        let i = 0;\n\n        do {\n          suggestions = suggestions.sort().filter(v => regex.test(v) && v !== selectedElements[i]);\n          i++;\n        } while (i < selectedElements.length);\n      } else {\n        suggestions = [];\n      }\n\n      this.setState(() => ({\n        suggestions,\n        text: value\n      }));\n    };\n\n    this.renderSuggestions = () => {\n      const suggestions = this.state.suggestions;\n\n      if (suggestions.length === 0) {\n        return null;\n      }\n\n      if (this.state.suggestions) {\n        return this.state.suggestions.map((item, i) => React.createElement(ListItem, {\n          items: this.state.listOfItems,\n          selectedElements: this.state.selectedElements,\n          key: i,\n          text: item,\n          suggestionSelected: () => this.suggestionSelected(item, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.state = {\n      suggestions: [],\n      text: \"\",\n      selectedElements: [],\n      listOfItems: this.props.listOfItems\n    };\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      className: \"MultySelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.state.selectedElements.map(this.eachElement)), React.createElement(\"input\", {\n      id: \"input\",\n      value: text,\n      onChange: this.onTextChanged,\n      onKeyDown: this.handleKeyDown,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}","map":{"version":3,"sources":["/home/roman/Рабочий стол/MultySelect-master/src/MultySelect.js"],"names":["React","ListItem","Component","render","props","suggestionSelected","text","SelectedElements","deleteElement","item","MultySelect","constructor","i","suggestions","state","selectedElements","listOfItems","includes","push","splice","value","document","getElementById","length","regex","RegExp","sort","filter","v","test","setState","eachElement","index","handleKeyDown","e","suggs","key","splitText","split","match","onTextChanged","target","renderSuggestions","map"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './MultySelect.css';\n\nclass ListItem extends React.Component {\n    render() {\n        return (\n            <ul>\n                <li onClick={this.props.suggestionSelected}>{this.props.text}</li>\n            </ul>\n        )\n    }\n}\n\nclass SelectedElements extends React.Component {\n    render() {\n        return (\n            <button className=\"elementBtn\" onClick={this.props.deleteElement}>\n                {this.props.item}\n                <span className=\"cross\">&#10008;</span>\n            </button>\n        )\n    }\n}\n\nexport default class MultySelect extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            suggestions: [],\n            text: \"\",\n            selectedElements: [],\n            listOfItems: this.props.listOfItems,\n        };\n    }\n\n    deleteElement = (i) => {\n        let suggestions = this.state.suggestions;\n        const selectedElements = this.state.selectedElements;\n        const listOfItems = this.state.listOfItems;\n\n        if (listOfItems.includes(selectedElements[i]) === false) {        // 2 пункт доп. задания\n            listOfItems.push(selectedElements[i]);\n        }\n\n        suggestions.push(selectedElements[i]);\n        selectedElements.splice(i, 1);\n\n        const value = document.getElementById(\"input\").value;\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = suggestions.sort().filter(v => regex.test(v));\n        } else {\n            suggestions = [];\n        }\n        this.setState({\n            selectedElements: selectedElements,\n            suggestions: suggestions,\n            listOfItems: listOfItems,\n        });\n    };\n\n    eachElement = (item, i) => {\n        return (\n            <SelectedElements key={i} item={item} deleteElement={() => this.deleteElement(i)}/>\n        )\n    };\n\n    suggestionSelected = (text, index) => {\n        const selectedElements = this.state.selectedElements;\n        selectedElements.push(text);\n        this.setState({\n            selectedElements: selectedElements,\n            suggestions: this.state.suggestions.filter((item, i) => i !== index),\n        });\n    };\n\n    handleKeyDown = (e) => { // доп. задание\n        const selectedElements = this.state.selectedElements;\n        const text = this.state.text;\n        const suggs = this.state.suggestions;\n\n        // 4 пункт доп. задания (при вводе Апельсин, мандарин, киви)\n        if (text.includes(\",\") && !text.includes(\"\\\"\") && e.key === \"Enter\") {\n            let splitText = text.split(\", \");\n\n            for (let i = 0; i < splitText.length; i++) {\n                if (!selectedElements.includes(splitText[i])) {\n                    selectedElements.push(splitText[i]);\n                }\n            }\n\n            this.setState({\n                selectedElements: selectedElements\n            });\n        }\n\n        // 4 пункт доп. задания (при вводе Университет, \"Школа, Детский сад\", Колледж)\n        else if (text.includes(\"\\\"\") && e.key === \"Enter\") {\n            let splitText = text.match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/gm);\n\n            for (let i = 0; i < splitText.length; i++) {\n                if (!selectedElements.includes(splitText[i])) {\n                    selectedElements.push(splitText[i]);\n                }\n            }\n\n            this.setState({\n                selectedElements: selectedElements\n            });\n        }\n\n        // 1 пункт доп. задания\n        else if (suggs.length === 0 && text.length !== 0 && e.key === \"Enter\" && !selectedElements.includes(text)) {\n            selectedElements.push(text);\n            this.setState({\n                selectedElements: selectedElements\n            });\n        }\n\n        // 3 пункт доп. задания\n        else if (text.length === 0 && e.key === \"Backspace\") {\n            selectedElements.splice(selectedElements.length-1, 1);\n            this.setState({\n                selectedElements: selectedElements,\n            });\n        }\n    };\n\n    onTextChanged = (e) => {\n        const {listOfItems} = this.props;\n        const value = e.target.value;\n        const selectedElements = this.state.selectedElements;\n\n        let suggestions = [];\n        suggestions = listOfItems;\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, \"i\");\n\n            let i = 0;\n            do {\n                suggestions = suggestions.sort().filter (\n                    v => regex.test(v) && v !== selectedElements[i]\n                );\n                i++;\n            }\n            while (i < selectedElements.length)\n\n        } else {\n            suggestions = [];\n        }\n\n        this.setState(() => ({suggestions, text: value}));\n    };\n\n    renderSuggestions = () => {\n        const {suggestions} = this.state;\n\n        if (suggestions.length === 0) {\n            return null;\n        }\n\n        if (this.state.suggestions) {\n            return (\n                this.state.suggestions.map((item, i) => (\n                    <ListItem\n                        items={this.state.listOfItems}\n                        selectedElements={this.state.selectedElements}\n                        key={i}\n                        text={item}\n                        suggestionSelected={() => this.suggestionSelected(item, i)}\n                    />\n                ))\n            );\n        }\n    };\n\n    render() {\n        const {text} = this.state;\n\n        return (\n            <div className=\"MultySelect\">\n                <div className=\"buttons\">\n                    {this.state.selectedElements.map(this.eachElement)}\n                </div>\n                <input id=\"input\" value={text} onChange={this.onTextChanged} onKeyDown={this.handleKeyDown} type=\"text\"/>\n                {this.renderSuggestions()}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}