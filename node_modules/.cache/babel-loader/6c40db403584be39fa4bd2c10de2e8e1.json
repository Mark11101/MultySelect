{"ast":null,"code":"var _jsxFileName = \"/home/roman/\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B/MultySelect-master/src/MultySelect.js\";\nimport React from 'react';\nimport './MultySelect.css';\nexport default class MultySelect extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.onTextChanged = e => {\n      const listOfItems = this.props.listOfItems;\n      const value = e.target.value;\n      const arr = this.state.selectedElements;\n      let suggestions = [];\n      suggestions = listOfItems;\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), \"i\");\n        let i = 0;\n\n        do {\n          suggestions = suggestions.sort().filter(v => regex.test(v) && v !== arr[i]);\n          i++;\n        } while (i < arr.length);\n      } else {\n        suggestions = [];\n      }\n\n      this.setState(() => ({\n        suggestions,\n        inputText: value\n      }));\n    };\n\n    this.handleKeyDown = e => {\n      // доп. задание\n      const arr = this.state.selectedElements;\n      const text = this.state.inputText;\n      const suggs = this.state.suggestions; // 4 пункт доп. задания при вводе Апельсин, мандарин, киви\n\n      if (text.includes(\",\") && !text.includes(\"\\\"\") && e.key === \"Enter\") {\n        let splitText = text.split(\", \");\n\n        for (let i = 0; i < splitText.length; i++) {\n          if (!arr.includes(splitText[i])) {\n            arr.push(splitText[i]);\n          }\n        }\n\n        this.setState({\n          selectedElements: arr\n        });\n      } // 4 пункт доп. задания при вводе Университет, \"Школа, Детский сад\", Колледж\n      else if (text.includes(\"\\\"\") && e.key === \"Enter\") {\n          let splitText = text.match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/gm);\n\n          for (let i = 0; i < splitText.length; i++) {\n            if (!arr.includes(splitText[i])) {\n              arr.push(splitText[i]);\n            }\n          }\n\n          this.setState({\n            selectedElements: arr\n          });\n        } else if (suggs.length === 0 && text.length !== 0 && e.key === \"Enter\" && !arr.includes(text)) {\n          // 1 пункт доп. задания\n          arr.push(text);\n          this.setState({\n            selectedElements: arr\n          });\n        } else if (text.length === 0 && e.key === \"Backspace\") {\n          // 3 пункт доп. задания\n          arr.splice(arr.length - 1, 1);\n          this.setState({\n            selectedElements: arr\n          });\n        }\n    };\n\n    this.suggestionSelected = (text, index) => {\n      const arr = this.state.selectedElements;\n      arr.push(text);\n      this.setState({\n        selectedElements: arr,\n        suggestions: this.state.suggestions.filter((item, i) => i !== index)\n      });\n    };\n\n    this.eachElement = (item, i) => {\n      return React.createElement(Elements, {\n        key: i,\n        item: item,\n        deleteElement: () => this.deleteElement(i),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      });\n    };\n\n    this.deleteElement = i => {\n      let suggestions = this.state.suggestions;\n      const arr = this.state.selectedElements;\n      const arrOfItems = this.state.listOfItems;\n\n      if (arrOfItems.includes(arr[i]) === false) {\n        // 2 пункт доп. задания\n        arrOfItems.push(arr[i]);\n      }\n\n      suggestions.push(arr[i]);\n      arr.splice(i, 1);\n      const value = document.getElementById(\"input\").value;\n\n      if (value.length > 0) {\n        const regex = new RegExp(\"^\".concat(value), 'i');\n        suggestions = suggestions.sort().filter(v => regex.test(v));\n      } else {\n        suggestions = [];\n      }\n\n      this.setState({\n        selectedElements: arr,\n        suggestions: suggestions,\n        listOfItems: arrOfItems\n      });\n    };\n\n    this.renderSuggestions = () => {\n      const suggestions = this.state.suggestions;\n\n      if (suggestions.length === 0) {\n        return null;\n      }\n\n      if (this.state.suggestions) {\n        return this.state.suggestions.map((item, i) => React.createElement(ListItem, {\n          items: this.state.listOfItems,\n          selectedElements: this.state.selectedElements,\n          key: i,\n          text: item,\n          suggestionSelected: () => this.suggestionSelected(item, i),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 145\n          },\n          __self: this\n        }));\n      }\n    };\n\n    this.state = {\n      suggestions: [],\n      inputText: \"\",\n      selectedElements: [],\n      listOfItems: this.props.listOfItems\n    };\n  }\n\n  render() {\n    const text = this.state.text;\n    return React.createElement(\"div\", {\n      className: \"MultySelect\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"buttons\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, this.state.selectedElements.map(this.eachElement)), React.createElement(\"input\", {\n      id: \"input\",\n      value: text,\n      onChange: this.onTextChanged,\n      onKeyDown: this.handleKeyDown,\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), this.renderSuggestions());\n  }\n\n}\n\nclass ListItem extends React.Component {\n  render() {\n    return React.createElement(\"ul\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175\n      },\n      __self: this\n    }, React.createElement(\"li\", {\n      onClick: this.props.suggestionSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176\n      },\n      __self: this\n    }, this.props.inputText));\n  }\n\n}\n\nclass Elements extends React.Component {\n  render() {\n    return React.createElement(\"button\", {\n      className: \"elementBtn\",\n      onClick: this.props.deleteElement,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }, this.props.item, React.createElement(\"span\", {\n      className: \"cross\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, \"\\u2718\"));\n  }\n\n}","map":{"version":3,"sources":["/home/roman/Рабочий стол/MultySelect-master/src/MultySelect.js"],"names":["React","MultySelect","Component","constructor","props","onTextChanged","e","listOfItems","value","target","arr","state","selectedElements","suggestions","length","regex","RegExp","i","sort","filter","v","test","setState","inputText","handleKeyDown","text","suggs","includes","key","splitText","split","push","match","splice","suggestionSelected","index","item","eachElement","deleteElement","arrOfItems","document","getElementById","renderSuggestions","map","render","ListItem","Elements"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './MultySelect.css';\n\nexport default class MultySelect extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            suggestions: [],\n            inputText: \"\",\n            selectedElements: [],\n            listOfItems: this.props.listOfItems,\n        };\n    }\n\n    onTextChanged = (e) => {\n        const {listOfItems} = this.props;\n        const value = e.target.value;\n        const arr = this.state.selectedElements;\n\n        let suggestions = [];\n        suggestions = listOfItems;\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, \"i\");\n\n            let i = 0;\n            do {\n                suggestions = suggestions.sort().filter (\n                    v => regex.test(v) && v !== arr[i]\n                );\n                i++;\n            }\n            while (i < arr.length)\n\n        } else {\n            suggestions = [];\n        }\n\n        this.setState(() => ({suggestions, inputText: value}));\n    };\n\n    handleKeyDown = (e) => { // доп. задание\n        const arr = this.state.selectedElements;\n        const text = this.state.inputText;\n        const suggs = this.state.suggestions;\n\n        // 4 пункт доп. задания при вводе Апельсин, мандарин, киви\n        if (text.includes(\",\") && !text.includes(\"\\\"\") && e.key === \"Enter\") {\n            let splitText = text.split(\", \");\n\n            for (let i = 0; i < splitText.length; i++) {\n                if (!arr.includes(splitText[i])) {\n                    arr.push(splitText[i]);\n                }\n            }\n\n            this.setState({\n                selectedElements: arr\n            });\n        }\n\n        // 4 пункт доп. задания при вводе Университет, \"Школа, Детский сад\", Колледж\n        else if (text.includes(\"\\\"\") && e.key === \"Enter\") {\n            let splitText = text.match(/(\".*?\"|[^\",\\s]+)(?=\\s*,|\\s*$)/gm);\n\n            for (let i = 0; i < splitText.length; i++) {\n                if (!arr.includes(splitText[i])) {\n                    arr.push(splitText[i]);\n                }\n            }\n\n            this.setState({\n                selectedElements: arr\n            });\n        }\n\n        else if (suggs.length === 0 && text.length !== 0 && e.key === \"Enter\" && !arr.includes(text)) { // 1 пункт доп. задания\n            arr.push(text);\n            this.setState({\n                selectedElements: arr\n            });\n        }\n\n        else if (text.length === 0 && e.key === \"Backspace\") {  // 3 пункт доп. задания\n            arr.splice(arr.length-1, 1);\n            this.setState({\n                selectedElements: arr,\n            });\n        }\n    };\n\n    suggestionSelected = (text, index) => {\n        const arr = this.state.selectedElements;\n        arr.push(text);\n        this.setState({\n            selectedElements: arr,\n            suggestions: this.state.suggestions.filter((item, i) => i !== index),\n        });\n    };\n\n    eachElement = (item, i) => {\n        return (\n            <Elements key={i} item={item} deleteElement={() => this.deleteElement(i)}/>\n        )\n    };\n\n    deleteElement = (i) => {\n        let suggestions = this.state.suggestions;\n        const arr = this.state.selectedElements;\n        const arrOfItems = this.state.listOfItems;\n\n        if (arrOfItems.includes(arr[i]) === false) {        // 2 пункт доп. задания\n            arrOfItems.push(arr[i]);\n        }\n\n        suggestions.push(arr[i]);\n        arr.splice(i, 1);\n\n        const value = document.getElementById(\"input\").value;\n\n        if (value.length > 0) {\n            const regex = new RegExp(`^${value}`, 'i');\n            suggestions = suggestions.sort().filter(v => regex.test(v));\n        } else {\n            suggestions = [];\n        }\n        this.setState({\n            selectedElements: arr,\n            suggestions: suggestions,\n            listOfItems: arrOfItems,\n        });\n    };\n\n    renderSuggestions = () => {\n        const {suggestions} = this.state;\n\n        if (suggestions.length === 0) {\n            return null;\n        }\n\n        if (this.state.suggestions) {\n            return (\n                this.state.suggestions.map((item, i) => (\n                    <ListItem\n                        items={this.state.listOfItems}\n                        selectedElements={this.state.selectedElements}\n                        key={i}\n                        text={item}\n                        suggestionSelected={() => this.suggestionSelected(item, i)}\n                    />\n                ))\n            );\n        }\n    };\n\n    render() {\n        const {text} = this.state;\n\n        return (\n            <div className=\"MultySelect\">\n                <div className=\"buttons\">\n                    {this.state.selectedElements.map(this.eachElement)}\n                </div>\n                <input id=\"input\" value={text} onChange={this.onTextChanged} onKeyDown={this.handleKeyDown} type=\"text\"/>\n                {this.renderSuggestions()}\n            </div>\n        )\n    }\n}\n\nclass ListItem extends React.Component {\n    render() {\n        return (\n            <ul>\n                <li onClick={this.props.suggestionSelected}>{this.props.inputText}</li>\n            </ul>\n        )\n    }\n}\n\nclass Elements extends React.Component {\n    render() {\n        return (\n            <button className=\"elementBtn\" onClick={this.props.deleteElement}>\n                {this.props.item}\n                <span className=\"cross\">&#10008;</span>\n            </button>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}